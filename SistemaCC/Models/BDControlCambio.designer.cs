#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaCC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TT 2019-A071")]
	public partial class BDControlCambioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActividades(Actividades instance);
    partial void UpdateActividades(Actividades instance);
    partial void DeleteActividades(Actividades instance);
    partial void InsertActividadesControl(ActividadesControl instance);
    partial void UpdateActividadesControl(ActividadesControl instance);
    partial void DeleteActividadesControl(ActividadesControl instance);
    partial void InsertAutorizaciones(Autorizaciones instance);
    partial void UpdateAutorizaciones(Autorizaciones instance);
    partial void DeleteAutorizaciones(Autorizaciones instance);
    partial void InsertControlCambio(ControlCambio instance);
    partial void UpdateControlCambio(ControlCambio instance);
    partial void DeleteControlCambio(ControlCambio instance);
    partial void InsertControlServicio(ControlServicio instance);
    partial void UpdateControlServicio(ControlServicio instance);
    partial void DeleteControlServicio(ControlServicio instance);
    partial void InsertDocumentos(Documentos instance);
    partial void UpdateDocumentos(Documentos instance);
    partial void DeleteDocumentos(Documentos instance);
    partial void InsertMonitoreo(Monitoreo instance);
    partial void UpdateMonitoreo(Monitoreo instance);
    partial void DeleteMonitoreo(Monitoreo instance);
    partial void InsertNotificaciones(Notificaciones instance);
    partial void UpdateNotificaciones(Notificaciones instance);
    partial void DeleteNotificaciones(Notificaciones instance);
    partial void InsertRevisiones(Revisiones instance);
    partial void UpdateRevisiones(Revisiones instance);
    partial void DeleteRevisiones(Revisiones instance);
    partial void InsertRiesgos(Riesgos instance);
    partial void UpdateRiesgos(Riesgos instance);
    partial void DeleteRiesgos(Riesgos instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertServiciosAplicaciones(ServiciosAplicaciones instance);
    partial void UpdateServiciosAplicaciones(ServiciosAplicaciones instance);
    partial void DeleteServiciosAplicaciones(ServiciosAplicaciones instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertUsuarioRol(UsuarioRol instance);
    partial void UpdateUsuarioRol(UsuarioRol instance);
    partial void DeleteUsuarioRol(UsuarioRol instance);
    #endregion
		
		public BDControlCambioDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TT_2019_A071ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDControlCambioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDControlCambioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDControlCambioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDControlCambioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividades> Actividades
		{
			get
			{
				return this.GetTable<Actividades>();
			}
		}
		
		public System.Data.Linq.Table<ActividadesControl> ActividadesControl
		{
			get
			{
				return this.GetTable<ActividadesControl>();
			}
		}
		
		public System.Data.Linq.Table<Autorizaciones> Autorizaciones
		{
			get
			{
				return this.GetTable<Autorizaciones>();
			}
		}
		
		public System.Data.Linq.Table<ControlCambio> ControlCambio
		{
			get
			{
				return this.GetTable<ControlCambio>();
			}
		}
		
		public System.Data.Linq.Table<ControlServicio> ControlServicio
		{
			get
			{
				return this.GetTable<ControlServicio>();
			}
		}
		
		public System.Data.Linq.Table<Documentos> Documentos
		{
			get
			{
				return this.GetTable<Documentos>();
			}
		}
		
		public System.Data.Linq.Table<Monitoreo> Monitoreo
		{
			get
			{
				return this.GetTable<Monitoreo>();
			}
		}
		
		public System.Data.Linq.Table<Notificaciones> Notificaciones
		{
			get
			{
				return this.GetTable<Notificaciones>();
			}
		}
		
		public System.Data.Linq.Table<Revisiones> Revisiones
		{
			get
			{
				return this.GetTable<Revisiones>();
			}
		}
		
		public System.Data.Linq.Table<Riesgos> Riesgos
		{
			get
			{
				return this.GetTable<Riesgos>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<ServiciosAplicaciones> ServiciosAplicaciones
		{
			get
			{
				return this.GetTable<ServiciosAplicaciones>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioRol> UsuarioRol
		{
			get
			{
				return this.GetTable<UsuarioRol>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividades")]
	public partial class Actividades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ac;
		
		private string _Tipo;
		
		private string _Descripcion;
		
		private System.DateTime _FechaRealizacion;
		
		private string _Observaciones;
		
		private System.Nullable<int> _Responsable;
		
		private EntitySet<ActividadesControl> _ActividadesControl;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AcChanging(int value);
    partial void OnId_AcChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnFechaRealizacionChanging(System.DateTime value);
    partial void OnFechaRealizacionChanged();
    partial void OnObservacionesChanging(string value);
    partial void OnObservacionesChanged();
    partial void OnResponsableChanging(System.Nullable<int> value);
    partial void OnResponsableChanged();
    #endregion
		
		public Actividades()
		{
			this._ActividadesControl = new EntitySet<ActividadesControl>(new Action<ActividadesControl>(this.attach_ActividadesControl), new Action<ActividadesControl>(this.detach_ActividadesControl));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Ac
		{
			get
			{
				return this._Id_Ac;
			}
			set
			{
				if ((this._Id_Ac != value))
				{
					this.OnId_AcChanging(value);
					this.SendPropertyChanging();
					this._Id_Ac = value;
					this.SendPropertyChanged("Id_Ac");
					this.OnId_AcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaRealizacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaRealizacion
		{
			get
			{
				return this._FechaRealizacion;
			}
			set
			{
				if ((this._FechaRealizacion != value))
				{
					this.OnFechaRealizacionChanging(value);
					this.SendPropertyChanging();
					this._FechaRealizacion = value;
					this.SendPropertyChanged("FechaRealizacion");
					this.OnFechaRealizacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observaciones", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Observaciones
		{
			get
			{
				return this._Observaciones;
			}
			set
			{
				if ((this._Observaciones != value))
				{
					this.OnObservacionesChanging(value);
					this.SendPropertyChanging();
					this._Observaciones = value;
					this.SendPropertyChanged("Observaciones");
					this.OnObservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsable", DbType="Int")]
		public System.Nullable<int> Responsable
		{
			get
			{
				return this._Responsable;
			}
			set
			{
				if ((this._Responsable != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableChanging(value);
					this.SendPropertyChanging();
					this._Responsable = value;
					this.SendPropertyChanged("Responsable");
					this.OnResponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividades_ActividadesControl", Storage="_ActividadesControl", ThisKey="Id_Ac", OtherKey="fk_Ac")]
		public EntitySet<ActividadesControl> ActividadesControl
		{
			get
			{
				return this._ActividadesControl;
			}
			set
			{
				this._ActividadesControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Actividades", Storage="_Usuario", ThisKey="Responsable", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Actividades.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Actividades.Add(this);
						this._Responsable = value.Id_U;
					}
					else
					{
						this._Responsable = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActividadesControl(ActividadesControl entity)
		{
			this.SendPropertyChanging();
			entity.Actividades = this;
		}
		
		private void detach_ActividadesControl(ActividadesControl entity)
		{
			this.SendPropertyChanging();
			entity.Actividades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActividadesControl")]
	public partial class ActividadesControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_CA;
		
		private System.Nullable<int> _fk_Ac;
		
		private System.Nullable<int> _fk_CC;
		
		private EntityRef<Actividades> _Actividades;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CAChanging(int value);
    partial void OnId_CAChanged();
    partial void Onfk_AcChanging(System.Nullable<int> value);
    partial void Onfk_AcChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    #endregion
		
		public ActividadesControl()
		{
			this._Actividades = default(EntityRef<Actividades>);
			this._ControlCambio = default(EntityRef<ControlCambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_CA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_CA
		{
			get
			{
				return this._Id_CA;
			}
			set
			{
				if ((this._Id_CA != value))
				{
					this.OnId_CAChanging(value);
					this.SendPropertyChanging();
					this._Id_CA = value;
					this.SendPropertyChanged("Id_CA");
					this.OnId_CAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_Ac", DbType="Int")]
		public System.Nullable<int> fk_Ac
		{
			get
			{
				return this._fk_Ac;
			}
			set
			{
				if ((this._fk_Ac != value))
				{
					if (this._Actividades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_AcChanging(value);
					this.SendPropertyChanging();
					this._fk_Ac = value;
					this.SendPropertyChanged("fk_Ac");
					this.Onfk_AcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividades_ActividadesControl", Storage="_Actividades", ThisKey="fk_Ac", OtherKey="Id_Ac", IsForeignKey=true)]
		public Actividades Actividades
		{
			get
			{
				return this._Actividades.Entity;
			}
			set
			{
				Actividades previousValue = this._Actividades.Entity;
				if (((previousValue != value) 
							|| (this._Actividades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actividades.Entity = null;
						previousValue.ActividadesControl.Remove(this);
					}
					this._Actividades.Entity = value;
					if ((value != null))
					{
						value.ActividadesControl.Add(this);
						this._fk_Ac = value.Id_Ac;
					}
					else
					{
						this._fk_Ac = default(Nullable<int>);
					}
					this.SendPropertyChanged("Actividades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_ActividadesControl", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.ActividadesControl.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.ActividadesControl.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autorizaciones")]
	public partial class Autorizaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Au;
		
		private System.Nullable<int> _fk_U;
		
		private System.Nullable<int> _fk_CC;
		
		private string _Tipo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private bool _Autorizado;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AuChanging(int value);
    partial void OnId_AuChanged();
    partial void Onfk_UChanging(System.Nullable<int> value);
    partial void Onfk_UChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnAutorizadoChanging(bool value);
    partial void OnAutorizadoChanged();
    #endregion
		
		public Autorizaciones()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Au", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Au
		{
			get
			{
				return this._Id_Au;
			}
			set
			{
				if ((this._Id_Au != value))
				{
					this.OnId_AuChanging(value);
					this.SendPropertyChanging();
					this._Id_Au = value;
					this.SendPropertyChanged("Id_Au");
					this.OnId_AuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_U", DbType="Int")]
		public System.Nullable<int> fk_U
		{
			get
			{
				return this._fk_U;
			}
			set
			{
				if ((this._fk_U != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_UChanging(value);
					this.SendPropertyChanging();
					this._fk_U = value;
					this.SendPropertyChanged("fk_U");
					this.Onfk_UChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Autorizado", DbType="Bit NOT NULL")]
		public bool Autorizado
		{
			get
			{
				return this._Autorizado;
			}
			set
			{
				if ((this._Autorizado != value))
				{
					this.OnAutorizadoChanging(value);
					this.SendPropertyChanging();
					this._Autorizado = value;
					this.SendPropertyChanged("Autorizado");
					this.OnAutorizadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Autorizaciones", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.Autorizaciones.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.Autorizaciones.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Autorizaciones", Storage="_Usuario", ThisKey="fk_U", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Autorizaciones.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Autorizaciones.Add(this);
						this._fk_U = value.Id_U;
					}
					else
					{
						this._fk_U = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlCambio")]
	public partial class ControlCambio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_CC;
		
		private string _Titulo;
		
		private System.DateTime _FechaEjecucion;
		
		private string _Introduccion;
		
		private string _Objetivos;
		
		private string _Tipo;
		
		private string _Estado;
		
		private System.Nullable<int> _Creador;
		
		private EntitySet<ActividadesControl> _ActividadesControl;
		
		private EntitySet<Autorizaciones> _Autorizaciones;
		
		private EntitySet<ControlServicio> _ControlServicio;
		
		private EntitySet<Documentos> _Documentos;
		
		private EntitySet<Notificaciones> _Notificaciones;
		
		private EntitySet<Revisiones> _Revisiones;
		
		private EntitySet<Riesgos> _Riesgos;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CCChanging(int value);
    partial void OnId_CCChanged();
    partial void OnTituloChanging(string value);
    partial void OnTituloChanged();
    partial void OnFechaEjecucionChanging(System.DateTime value);
    partial void OnFechaEjecucionChanged();
    partial void OnIntroduccionChanging(string value);
    partial void OnIntroduccionChanged();
    partial void OnObjetivosChanging(string value);
    partial void OnObjetivosChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnCreadorChanging(System.Nullable<int> value);
    partial void OnCreadorChanged();
    #endregion
		
		public ControlCambio()
		{
			this._ActividadesControl = new EntitySet<ActividadesControl>(new Action<ActividadesControl>(this.attach_ActividadesControl), new Action<ActividadesControl>(this.detach_ActividadesControl));
			this._Autorizaciones = new EntitySet<Autorizaciones>(new Action<Autorizaciones>(this.attach_Autorizaciones), new Action<Autorizaciones>(this.detach_Autorizaciones));
			this._ControlServicio = new EntitySet<ControlServicio>(new Action<ControlServicio>(this.attach_ControlServicio), new Action<ControlServicio>(this.detach_ControlServicio));
			this._Documentos = new EntitySet<Documentos>(new Action<Documentos>(this.attach_Documentos), new Action<Documentos>(this.detach_Documentos));
			this._Notificaciones = new EntitySet<Notificaciones>(new Action<Notificaciones>(this.attach_Notificaciones), new Action<Notificaciones>(this.detach_Notificaciones));
			this._Revisiones = new EntitySet<Revisiones>(new Action<Revisiones>(this.attach_Revisiones), new Action<Revisiones>(this.detach_Revisiones));
			this._Riesgos = new EntitySet<Riesgos>(new Action<Riesgos>(this.attach_Riesgos), new Action<Riesgos>(this.detach_Riesgos));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_CC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_CC
		{
			get
			{
				return this._Id_CC;
			}
			set
			{
				if ((this._Id_CC != value))
				{
					this.OnId_CCChanging(value);
					this.SendPropertyChanging();
					this._Id_CC = value;
					this.SendPropertyChanged("Id_CC");
					this.OnId_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titulo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titulo
		{
			get
			{
				return this._Titulo;
			}
			set
			{
				if ((this._Titulo != value))
				{
					this.OnTituloChanging(value);
					this.SendPropertyChanging();
					this._Titulo = value;
					this.SendPropertyChanged("Titulo");
					this.OnTituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEjecucion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEjecucion
		{
			get
			{
				return this._FechaEjecucion;
			}
			set
			{
				if ((this._FechaEjecucion != value))
				{
					this.OnFechaEjecucionChanging(value);
					this.SendPropertyChanging();
					this._FechaEjecucion = value;
					this.SendPropertyChanged("FechaEjecucion");
					this.OnFechaEjecucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Introduccion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Introduccion
		{
			get
			{
				return this._Introduccion;
			}
			set
			{
				if ((this._Introduccion != value))
				{
					this.OnIntroduccionChanging(value);
					this.SendPropertyChanging();
					this._Introduccion = value;
					this.SendPropertyChanged("Introduccion");
					this.OnIntroduccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objetivos", DbType="VarChar(150)")]
		public string Objetivos
		{
			get
			{
				return this._Objetivos;
			}
			set
			{
				if ((this._Objetivos != value))
				{
					this.OnObjetivosChanging(value);
					this.SendPropertyChanging();
					this._Objetivos = value;
					this.SendPropertyChanged("Objetivos");
					this.OnObjetivosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creador", DbType="Int")]
		public System.Nullable<int> Creador
		{
			get
			{
				return this._Creador;
			}
			set
			{
				if ((this._Creador != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreadorChanging(value);
					this.SendPropertyChanging();
					this._Creador = value;
					this.SendPropertyChanged("Creador");
					this.OnCreadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_ActividadesControl", Storage="_ActividadesControl", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<ActividadesControl> ActividadesControl
		{
			get
			{
				return this._ActividadesControl;
			}
			set
			{
				this._ActividadesControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Autorizaciones", Storage="_Autorizaciones", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<Autorizaciones> Autorizaciones
		{
			get
			{
				return this._Autorizaciones;
			}
			set
			{
				this._Autorizaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_ControlServicio", Storage="_ControlServicio", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<ControlServicio> ControlServicio
		{
			get
			{
				return this._ControlServicio;
			}
			set
			{
				this._ControlServicio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Documentos", Storage="_Documentos", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<Documentos> Documentos
		{
			get
			{
				return this._Documentos;
			}
			set
			{
				this._Documentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Notificaciones", Storage="_Notificaciones", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<Notificaciones> Notificaciones
		{
			get
			{
				return this._Notificaciones;
			}
			set
			{
				this._Notificaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Revisiones", Storage="_Revisiones", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<Revisiones> Revisiones
		{
			get
			{
				return this._Revisiones;
			}
			set
			{
				this._Revisiones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Riesgos", Storage="_Riesgos", ThisKey="Id_CC", OtherKey="fk_CC")]
		public EntitySet<Riesgos> Riesgos
		{
			get
			{
				return this._Riesgos;
			}
			set
			{
				this._Riesgos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ControlCambio", Storage="_Usuario", ThisKey="Creador", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ControlCambio.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ControlCambio.Add(this);
						this._Creador = value.Id_U;
					}
					else
					{
						this._Creador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActividadesControl(ActividadesControl entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_ActividadesControl(ActividadesControl entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_Autorizaciones(Autorizaciones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_Autorizaciones(Autorizaciones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_ControlServicio(ControlServicio entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_ControlServicio(ControlServicio entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_Documentos(Documentos entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_Documentos(Documentos entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_Notificaciones(Notificaciones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_Notificaciones(Notificaciones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_Revisiones(Revisiones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_Revisiones(Revisiones entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
		
		private void attach_Riesgos(Riesgos entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = this;
		}
		
		private void detach_Riesgos(Riesgos entity)
		{
			this.SendPropertyChanging();
			entity.ControlCambio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlServicio")]
	public partial class ControlServicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_CS;
		
		private System.Nullable<int> _fk_CC;
		
		private System.Nullable<int> _fk_SA;
		
		private System.DateTime _FechaInicio;
		
		private System.DateTime _FechaFinal;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
		private EntityRef<ServiciosAplicaciones> _ServiciosAplicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_CSChanging(int value);
    partial void OnId_CSChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    partial void Onfk_SAChanging(System.Nullable<int> value);
    partial void Onfk_SAChanged();
    partial void OnFechaInicioChanging(System.DateTime value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinalChanging(System.DateTime value);
    partial void OnFechaFinalChanged();
    #endregion
		
		public ControlServicio()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			this._ServiciosAplicaciones = default(EntityRef<ServiciosAplicaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_CS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_CS
		{
			get
			{
				return this._Id_CS;
			}
			set
			{
				if ((this._Id_CS != value))
				{
					this.OnId_CSChanging(value);
					this.SendPropertyChanging();
					this._Id_CS = value;
					this.SendPropertyChanged("Id_CS");
					this.OnId_CSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_SA", DbType="Int")]
		public System.Nullable<int> fk_SA
		{
			get
			{
				return this._fk_SA;
			}
			set
			{
				if ((this._fk_SA != value))
				{
					if (this._ServiciosAplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_SAChanging(value);
					this.SendPropertyChanging();
					this._fk_SA = value;
					this.SendPropertyChanged("fk_SA");
					this.Onfk_SAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFinal", DbType="DateTime NOT NULL")]
		public System.DateTime FechaFinal
		{
			get
			{
				return this._FechaFinal;
			}
			set
			{
				if ((this._FechaFinal != value))
				{
					this.OnFechaFinalChanging(value);
					this.SendPropertyChanging();
					this._FechaFinal = value;
					this.SendPropertyChanged("FechaFinal");
					this.OnFechaFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_ControlServicio", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.ControlServicio.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.ControlServicio.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiciosAplicaciones_ControlServicio", Storage="_ServiciosAplicaciones", ThisKey="fk_SA", OtherKey="Id_SA", IsForeignKey=true)]
		public ServiciosAplicaciones ServiciosAplicaciones
		{
			get
			{
				return this._ServiciosAplicaciones.Entity;
			}
			set
			{
				ServiciosAplicaciones previousValue = this._ServiciosAplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._ServiciosAplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiciosAplicaciones.Entity = null;
						previousValue.ControlServicio.Remove(this);
					}
					this._ServiciosAplicaciones.Entity = value;
					if ((value != null))
					{
						value.ControlServicio.Add(this);
						this._fk_SA = value.Id_SA;
					}
					else
					{
						this._fk_SA = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiciosAplicaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documentos")]
	public partial class Documentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Do;
		
		private string _DocPath;
		
		private System.Nullable<int> _fk_CC;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DoChanging(int value);
    partial void OnId_DoChanged();
    partial void OnDocPathChanging(string value);
    partial void OnDocPathChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    #endregion
		
		public Documentos()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Do", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Do
		{
			get
			{
				return this._Id_Do;
			}
			set
			{
				if ((this._Id_Do != value))
				{
					this.OnId_DoChanging(value);
					this.SendPropertyChanging();
					this._Id_Do = value;
					this.SendPropertyChanged("Id_Do");
					this.OnId_DoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPath", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string DocPath
		{
			get
			{
				return this._DocPath;
			}
			set
			{
				if ((this._DocPath != value))
				{
					this.OnDocPathChanging(value);
					this.SendPropertyChanging();
					this._DocPath = value;
					this.SendPropertyChanged("DocPath");
					this.OnDocPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Documentos", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.Documentos.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.Documentos.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monitoreo")]
	public partial class Monitoreo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_At;
		
		private int _Cantidad;
		
		private System.DateTime _Fecha;
		
		private string _Tipo;
		
		private System.Nullable<int> _fk_U;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AtChanging(int value);
    partial void OnId_AtChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void Onfk_UChanging(System.Nullable<int> value);
    partial void Onfk_UChanged();
    #endregion
		
		public Monitoreo()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_At", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_At
		{
			get
			{
				return this._Id_At;
			}
			set
			{
				if ((this._Id_At != value))
				{
					this.OnId_AtChanging(value);
					this.SendPropertyChanging();
					this._Id_At = value;
					this.SendPropertyChanged("Id_At");
					this.OnId_AtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_U", DbType="Int")]
		public System.Nullable<int> fk_U
		{
			get
			{
				return this._fk_U;
			}
			set
			{
				if ((this._fk_U != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_UChanging(value);
					this.SendPropertyChanging();
					this._fk_U = value;
					this.SendPropertyChanged("fk_U");
					this.Onfk_UChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Monitoreo", Storage="_Usuario", ThisKey="fk_U", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Monitoreo.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Monitoreo.Add(this);
						this._fk_U = value.Id_U;
					}
					else
					{
						this._fk_U = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notificaciones")]
	public partial class Notificaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_No;
		
		private string _Contenido;
		
		private System.DateTime _FechaEnvio;
		
		private System.Nullable<int> _fk_U;
		
		private System.Nullable<int> _fk_CC;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NoChanging(int value);
    partial void OnId_NoChanged();
    partial void OnContenidoChanging(string value);
    partial void OnContenidoChanged();
    partial void OnFechaEnvioChanging(System.DateTime value);
    partial void OnFechaEnvioChanged();
    partial void Onfk_UChanging(System.Nullable<int> value);
    partial void Onfk_UChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    #endregion
		
		public Notificaciones()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_No
		{
			get
			{
				return this._Id_No;
			}
			set
			{
				if ((this._Id_No != value))
				{
					this.OnId_NoChanging(value);
					this.SendPropertyChanging();
					this._Id_No = value;
					this.SendPropertyChanged("Id_No");
					this.OnId_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contenido", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Contenido
		{
			get
			{
				return this._Contenido;
			}
			set
			{
				if ((this._Contenido != value))
				{
					this.OnContenidoChanging(value);
					this.SendPropertyChanging();
					this._Contenido = value;
					this.SendPropertyChanged("Contenido");
					this.OnContenidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaEnvio", DbType="DateTime NOT NULL")]
		public System.DateTime FechaEnvio
		{
			get
			{
				return this._FechaEnvio;
			}
			set
			{
				if ((this._FechaEnvio != value))
				{
					this.OnFechaEnvioChanging(value);
					this.SendPropertyChanging();
					this._FechaEnvio = value;
					this.SendPropertyChanged("FechaEnvio");
					this.OnFechaEnvioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_U", DbType="Int")]
		public System.Nullable<int> fk_U
		{
			get
			{
				return this._fk_U;
			}
			set
			{
				if ((this._fk_U != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_UChanging(value);
					this.SendPropertyChanging();
					this._fk_U = value;
					this.SendPropertyChanged("fk_U");
					this.Onfk_UChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Notificaciones", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.Notificaciones.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.Notificaciones.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Notificaciones", Storage="_Usuario", ThisKey="fk_U", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Notificaciones.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Notificaciones.Add(this);
						this._fk_U = value.Id_U;
					}
					else
					{
						this._fk_U = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revisiones")]
	public partial class Revisiones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Re;
		
		private string _InfGeneral;
		
		private string _Actividades;
		
		private string _Riesgos;
		
		private string _Servicios;
		
		private System.Nullable<int> _fk_CC;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ReChanging(int value);
    partial void OnId_ReChanged();
    partial void OnInfGeneralChanging(string value);
    partial void OnInfGeneralChanged();
    partial void OnActividadesChanging(string value);
    partial void OnActividadesChanged();
    partial void OnRiesgosChanging(string value);
    partial void OnRiesgosChanged();
    partial void OnServiciosChanging(string value);
    partial void OnServiciosChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    #endregion
		
		public Revisiones()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Re", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Re
		{
			get
			{
				return this._Id_Re;
			}
			set
			{
				if ((this._Id_Re != value))
				{
					this.OnId_ReChanging(value);
					this.SendPropertyChanging();
					this._Id_Re = value;
					this.SendPropertyChanged("Id_Re");
					this.OnId_ReChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfGeneral", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string InfGeneral
		{
			get
			{
				return this._InfGeneral;
			}
			set
			{
				if ((this._InfGeneral != value))
				{
					this.OnInfGeneralChanging(value);
					this.SendPropertyChanging();
					this._InfGeneral = value;
					this.SendPropertyChanged("InfGeneral");
					this.OnInfGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actividades", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Actividades
		{
			get
			{
				return this._Actividades;
			}
			set
			{
				if ((this._Actividades != value))
				{
					this.OnActividadesChanging(value);
					this.SendPropertyChanging();
					this._Actividades = value;
					this.SendPropertyChanged("Actividades");
					this.OnActividadesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Riesgos", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Riesgos
		{
			get
			{
				return this._Riesgos;
			}
			set
			{
				if ((this._Riesgos != value))
				{
					this.OnRiesgosChanging(value);
					this.SendPropertyChanging();
					this._Riesgos = value;
					this.SendPropertyChanged("Riesgos");
					this.OnRiesgosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servicios", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Servicios
		{
			get
			{
				return this._Servicios;
			}
			set
			{
				if ((this._Servicios != value))
				{
					this.OnServiciosChanging(value);
					this.SendPropertyChanging();
					this._Servicios = value;
					this.SendPropertyChanged("Servicios");
					this.OnServiciosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Revisiones", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.Revisiones.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.Revisiones.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Riesgos")]
	public partial class Riesgos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ri;
		
		private string _Descripcion;
		
		private string _Tipo;
		
		private System.Nullable<int> _fk_CC;
		
		private EntityRef<ControlCambio> _ControlCambio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RiChanging(int value);
    partial void OnId_RiChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void Onfk_CCChanging(System.Nullable<int> value);
    partial void Onfk_CCChanged();
    #endregion
		
		public Riesgos()
		{
			this._ControlCambio = default(EntityRef<ControlCambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ri", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Ri
		{
			get
			{
				return this._Id_Ri;
			}
			set
			{
				if ((this._Id_Ri != value))
				{
					this.OnId_RiChanging(value);
					this.SendPropertyChanging();
					this._Id_Ri = value;
					this.SendPropertyChanged("Id_Ri");
					this.OnId_RiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_CC", DbType="Int")]
		public System.Nullable<int> fk_CC
		{
			get
			{
				return this._fk_CC;
			}
			set
			{
				if ((this._fk_CC != value))
				{
					if (this._ControlCambio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_CCChanging(value);
					this.SendPropertyChanging();
					this._fk_CC = value;
					this.SendPropertyChanged("fk_CC");
					this.Onfk_CCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ControlCambio_Riesgos", Storage="_ControlCambio", ThisKey="fk_CC", OtherKey="Id_CC", IsForeignKey=true)]
		public ControlCambio ControlCambio
		{
			get
			{
				return this._ControlCambio.Entity;
			}
			set
			{
				ControlCambio previousValue = this._ControlCambio.Entity;
				if (((previousValue != value) 
							|| (this._ControlCambio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControlCambio.Entity = null;
						previousValue.Riesgos.Remove(this);
					}
					this._ControlCambio.Entity = value;
					if ((value != null))
					{
						value.Riesgos.Add(this);
						this._fk_CC = value.Id_CC;
					}
					else
					{
						this._fk_CC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ControlCambio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Rol;
		
		private string _Rol;
		
		private EntitySet<UsuarioRol> _UsuarioRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RolChanging(int value);
    partial void OnId_RolChanged();
    partial void OnRolChanging(string value);
    partial void OnRolChanged();
    #endregion
		
		public Roles()
		{
			this._UsuarioRol = new EntitySet<UsuarioRol>(new Action<UsuarioRol>(this.attach_UsuarioRol), new Action<UsuarioRol>(this.detach_UsuarioRol));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Rol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Rol
		{
			get
			{
				return this._Id_Rol;
			}
			set
			{
				if ((this._Id_Rol != value))
				{
					this.OnId_RolChanging(value);
					this.SendPropertyChanging();
					this._Id_Rol = value;
					this.SendPropertyChanged("Id_Rol");
					this.OnId_RolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_UsuarioRol", Storage="_UsuarioRol", ThisKey="Id_Rol", OtherKey="fk_Rol")]
		public EntitySet<UsuarioRol> UsuarioRol
		{
			get
			{
				return this._UsuarioRol;
			}
			set
			{
				this._UsuarioRol.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiciosAplicaciones")]
	public partial class ServiciosAplicaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_SA;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private string _Acronimo;
		
		private bool _Activo;
		
		private System.Nullable<int> _Dueno;
		
		private EntitySet<ControlServicio> _ControlServicio;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SAChanging(int value);
    partial void OnId_SAChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnAcronimoChanging(string value);
    partial void OnAcronimoChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    partial void OnDuenoChanging(System.Nullable<int> value);
    partial void OnDuenoChanged();
    #endregion
		
		public ServiciosAplicaciones()
		{
			this._ControlServicio = new EntitySet<ControlServicio>(new Action<ControlServicio>(this.attach_ControlServicio), new Action<ControlServicio>(this.detach_ControlServicio));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_SA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_SA
		{
			get
			{
				return this._Id_SA;
			}
			set
			{
				if ((this._Id_SA != value))
				{
					this.OnId_SAChanging(value);
					this.SendPropertyChanging();
					this._Id_SA = value;
					this.SendPropertyChanged("Id_SA");
					this.OnId_SAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acronimo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Acronimo
		{
			get
			{
				return this._Acronimo;
			}
			set
			{
				if ((this._Acronimo != value))
				{
					this.OnAcronimoChanging(value);
					this.SendPropertyChanging();
					this._Acronimo = value;
					this.SendPropertyChanged("Acronimo");
					this.OnAcronimoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dueno", DbType="Int")]
		public System.Nullable<int> Dueno
		{
			get
			{
				return this._Dueno;
			}
			set
			{
				if ((this._Dueno != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDuenoChanging(value);
					this.SendPropertyChanging();
					this._Dueno = value;
					this.SendPropertyChanged("Dueno");
					this.OnDuenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiciosAplicaciones_ControlServicio", Storage="_ControlServicio", ThisKey="Id_SA", OtherKey="fk_SA")]
		public EntitySet<ControlServicio> ControlServicio
		{
			get
			{
				return this._ControlServicio;
			}
			set
			{
				this._ControlServicio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ServiciosAplicaciones", Storage="_Usuario", ThisKey="Dueno", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ServiciosAplicaciones.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ServiciosAplicaciones.Add(this);
						this._Dueno = value.Id_U;
					}
					else
					{
						this._Dueno = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ControlServicio(ControlServicio entity)
		{
			this.SendPropertyChanging();
			entity.ServiciosAplicaciones = this;
		}
		
		private void detach_ControlServicio(ControlServicio entity)
		{
			this.SendPropertyChanging();
			entity.ServiciosAplicaciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_U;
		
		private string _Nombre;
		
		private string _ApePaterno;
		
		private string _ApeMaterno;
		
		private string _Email;
		
		private string _NoExt;
		
		private bool _Activo;
		
		private string _ClaveUnica;
		
		private EntitySet<Actividades> _Actividades;
		
		private EntitySet<Autorizaciones> _Autorizaciones;
		
		private EntitySet<ControlCambio> _ControlCambio;
		
		private EntitySet<Monitoreo> _Monitoreo;
		
		private EntitySet<Notificaciones> _Notificaciones;
		
		private EntitySet<ServiciosAplicaciones> _ServiciosAplicaciones;
		
		private EntitySet<UsuarioRol> _UsuarioRol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UChanging(int value);
    partial void OnId_UChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApePaternoChanging(string value);
    partial void OnApePaternoChanged();
    partial void OnApeMaternoChanging(string value);
    partial void OnApeMaternoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNoExtChanging(string value);
    partial void OnNoExtChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    partial void OnClaveUnicaChanging(string value);
    partial void OnClaveUnicaChanged();
    #endregion
		
		public Usuario()
		{
			this._Actividades = new EntitySet<Actividades>(new Action<Actividades>(this.attach_Actividades), new Action<Actividades>(this.detach_Actividades));
			this._Autorizaciones = new EntitySet<Autorizaciones>(new Action<Autorizaciones>(this.attach_Autorizaciones), new Action<Autorizaciones>(this.detach_Autorizaciones));
			this._ControlCambio = new EntitySet<ControlCambio>(new Action<ControlCambio>(this.attach_ControlCambio), new Action<ControlCambio>(this.detach_ControlCambio));
			this._Monitoreo = new EntitySet<Monitoreo>(new Action<Monitoreo>(this.attach_Monitoreo), new Action<Monitoreo>(this.detach_Monitoreo));
			this._Notificaciones = new EntitySet<Notificaciones>(new Action<Notificaciones>(this.attach_Notificaciones), new Action<Notificaciones>(this.detach_Notificaciones));
			this._ServiciosAplicaciones = new EntitySet<ServiciosAplicaciones>(new Action<ServiciosAplicaciones>(this.attach_ServiciosAplicaciones), new Action<ServiciosAplicaciones>(this.detach_ServiciosAplicaciones));
			this._UsuarioRol = new EntitySet<UsuarioRol>(new Action<UsuarioRol>(this.attach_UsuarioRol), new Action<UsuarioRol>(this.detach_UsuarioRol));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_U", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_U
		{
			get
			{
				return this._Id_U;
			}
			set
			{
				if ((this._Id_U != value))
				{
					this.OnId_UChanging(value);
					this.SendPropertyChanging();
					this._Id_U = value;
					this.SendPropertyChanged("Id_U");
					this.OnId_UChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApePaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ApePaterno
		{
			get
			{
				return this._ApePaterno;
			}
			set
			{
				if ((this._ApePaterno != value))
				{
					this.OnApePaternoChanging(value);
					this.SendPropertyChanging();
					this._ApePaterno = value;
					this.SendPropertyChanged("ApePaterno");
					this.OnApePaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApeMaterno", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ApeMaterno
		{
			get
			{
				return this._ApeMaterno;
			}
			set
			{
				if ((this._ApeMaterno != value))
				{
					this.OnApeMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApeMaterno = value;
					this.SendPropertyChanged("ApeMaterno");
					this.OnApeMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoExt", DbType="VarChar(5)")]
		public string NoExt
		{
			get
			{
				return this._NoExt;
			}
			set
			{
				if ((this._NoExt != value))
				{
					this.OnNoExtChanging(value);
					this.SendPropertyChanging();
					this._NoExt = value;
					this.SendPropertyChanged("NoExt");
					this.OnNoExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaveUnica", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ClaveUnica
		{
			get
			{
				return this._ClaveUnica;
			}
			set
			{
				if ((this._ClaveUnica != value))
				{
					this.OnClaveUnicaChanging(value);
					this.SendPropertyChanging();
					this._ClaveUnica = value;
					this.SendPropertyChanged("ClaveUnica");
					this.OnClaveUnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Actividades", Storage="_Actividades", ThisKey="Id_U", OtherKey="Responsable")]
		public EntitySet<Actividades> Actividades
		{
			get
			{
				return this._Actividades;
			}
			set
			{
				this._Actividades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Autorizaciones", Storage="_Autorizaciones", ThisKey="Id_U", OtherKey="fk_U")]
		public EntitySet<Autorizaciones> Autorizaciones
		{
			get
			{
				return this._Autorizaciones;
			}
			set
			{
				this._Autorizaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ControlCambio", Storage="_ControlCambio", ThisKey="Id_U", OtherKey="Creador")]
		public EntitySet<ControlCambio> ControlCambio
		{
			get
			{
				return this._ControlCambio;
			}
			set
			{
				this._ControlCambio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Monitoreo", Storage="_Monitoreo", ThisKey="Id_U", OtherKey="fk_U")]
		public EntitySet<Monitoreo> Monitoreo
		{
			get
			{
				return this._Monitoreo;
			}
			set
			{
				this._Monitoreo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Notificaciones", Storage="_Notificaciones", ThisKey="Id_U", OtherKey="fk_U")]
		public EntitySet<Notificaciones> Notificaciones
		{
			get
			{
				return this._Notificaciones;
			}
			set
			{
				this._Notificaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ServiciosAplicaciones", Storage="_ServiciosAplicaciones", ThisKey="Id_U", OtherKey="Dueno")]
		public EntitySet<ServiciosAplicaciones> ServiciosAplicaciones
		{
			get
			{
				return this._ServiciosAplicaciones;
			}
			set
			{
				this._ServiciosAplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioRol", Storage="_UsuarioRol", ThisKey="Id_U", OtherKey="fk_Us")]
		public EntitySet<UsuarioRol> UsuarioRol
		{
			get
			{
				return this._UsuarioRol;
			}
			set
			{
				this._UsuarioRol.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actividades(Actividades entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Actividades(Actividades entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Autorizaciones(Autorizaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Autorizaciones(Autorizaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_ControlCambio(ControlCambio entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ControlCambio(ControlCambio entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Monitoreo(Monitoreo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Monitoreo(Monitoreo entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Notificaciones(Notificaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Notificaciones(Notificaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_ServiciosAplicaciones(ServiciosAplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ServiciosAplicaciones(ServiciosAplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioRol(UsuarioRol entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuarioRol")]
	public partial class UsuarioRol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_UR;
		
		private System.Nullable<int> _fk_Us;
		
		private System.Nullable<int> _fk_Rol;
		
		private EntityRef<Roles> _Roles;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_URChanging(int value);
    partial void OnId_URChanged();
    partial void Onfk_UsChanging(System.Nullable<int> value);
    partial void Onfk_UsChanged();
    partial void Onfk_RolChanging(System.Nullable<int> value);
    partial void Onfk_RolChanged();
    #endregion
		
		public UsuarioRol()
		{
			this._Roles = default(EntityRef<Roles>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_UR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_UR
		{
			get
			{
				return this._Id_UR;
			}
			set
			{
				if ((this._Id_UR != value))
				{
					this.OnId_URChanging(value);
					this.SendPropertyChanging();
					this._Id_UR = value;
					this.SendPropertyChanged("Id_UR");
					this.OnId_URChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_Us", DbType="Int")]
		public System.Nullable<int> fk_Us
		{
			get
			{
				return this._fk_Us;
			}
			set
			{
				if ((this._fk_Us != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_UsChanging(value);
					this.SendPropertyChanging();
					this._fk_Us = value;
					this.SendPropertyChanged("fk_Us");
					this.Onfk_UsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_Rol", DbType="Int")]
		public System.Nullable<int> fk_Rol
		{
			get
			{
				return this._fk_Rol;
			}
			set
			{
				if ((this._fk_Rol != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfk_RolChanging(value);
					this.SendPropertyChanging();
					this._fk_Rol = value;
					this.SendPropertyChanged("fk_Rol");
					this.Onfk_RolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_UsuarioRol", Storage="_Roles", ThisKey="fk_Rol", OtherKey="Id_Rol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.UsuarioRol.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.UsuarioRol.Add(this);
						this._fk_Rol = value.Id_Rol;
					}
					else
					{
						this._fk_Rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_UsuarioRol", Storage="_Usuario", ThisKey="fk_Us", OtherKey="Id_U", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioRol.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioRol.Add(this);
						this._fk_Us = value.Id_U;
					}
					else
					{
						this._fk_Us = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
